define(["MV","Contact"],function(a,b){return{getAABB:function(c){var d=c.getVerticesInWorldCoords();var e=[];e[0]=a.min(d,0);e[1]=a.min(d,1);e[2]=a.max(d,0);e[3]=a.max(d,1);return e},getAABB2:function(c){var d=[];d[0]=a.min(c,0);d[1]=a.min(c,1);d[2]=a.max(c,0);d[3]=a.max(c,1);return d},AABBoverlap:function(e,d,c){if(c===undefined){c=0}return !((e[0]+c)>=d[2]||e[2]<=(d[0]+c)||(e[1]+c)>=d[3]||e[3]<=(d[1]+c))},AABBInside:function(d,c){return((d[0]>=c[0]&&d[2]<=c[2]&&d[1]>=c[1]&&d[3]<=c[3])||(c[0]>=d[0]&&c[2]<=d[2]&&c[1]>=d[1]&&c[3]<=d[3]))},getFaceNormals:function(c){var f=[],e=c.length,d,g,h;for(d=0;d<e;d++){g=a.VmV(c[(d+1)%e],c[d]);h=[-g[1],g[0]];if(h[0]!=0||h[1]!=0){h=a.normalize(h)}f.push(h)}return f},getCollisionCandidates:function(n){var m=this;var l;if(n.useQuadTree){l=n.quadTree.getAABBsGroups()}else{l=n.getAABBsGroups()}var e=[];var f;var d;var k=l.length;var h;var p;var o;var r;var w;var t;var q;var c=[];var x;var v;var u;var s;for(q=0;q<k;q++){r=l[q];f=r[0];d=r[1];h=f.length;for(p=0;p<h-1;p++){for(o=p+1;o<h;o++){x=f[p].index;v=f[o].index;u=x+""+v;s=v+""+x;if(c[u]==undefined||c[s]==undefined){w=f[p].groups;t=f[o].groups;if(m.compare(w,t)&&m.AABBoverlap(d[p],d[o],0)){e.push([x,v]);e.push([v,x]);c[u]=true;c[s]=true}}}}}return e},compare:function(f,e){var d,c;for(d=0;d<f.length;d++){for(c=0;c<e.length;c++){if(f[d]==e[c]){return true}}}return false},computeFaceNormals:function(e,f){var d=this;var c=f.map(function(i){return i[0]}).sort().filter(function(k,l,j){return(l===0||j[l]!==j[l-1])});var h=c.length;for(var g=0;g<h;g++){if(c[g]==undefined){throw new TypeError("body cannot be undefined")}e[c[g]].faceNormals=d.getFaceNormals(e[c[g]].getVerticesInWorldCoords())}},linesIntersect:function(e,d,g,c){var h=(d[0]-e[0])*(c[1]-g[1])-(d[1]-e[1])*(c[0]-g[0]),l=1e-9;if(Math.abs(h)<l){return false}var f=(c[0]-g[0])*(e[1]-g[1])-(c[1]-g[1])*(e[0]-g[0]),k=f/h;if(k<0||k>1){return false}var j=(d[1]-e[1])*(g[0]-e[0])-(d[0]-e[0])*(g[1]-e[1]),i=j/h;return !(i<0||i>1)},line_intersects:function(g,f,d,u){var c=g[0];var r=g[1];var o=f[0];var m=f[1];var i=d[0];var h=d[1];var q=u[0];var p=u[1];var e,v,n,l;e=o-c;v=m-r;n=q-i;l=p-h;var k,j;k=(-v*(c-i)+e*(r-h))/(-n*v+e*l);j=(n*(r-h)-l*(c-i))/(-n*v+e*l);if(k>=0&&k<=1&&j>=0&&j<=1){return 1}return 0},getContactsFromBodyPair:function(k,g){var s=this;var r=[];var o=k.getVerticesInWorldCoords();var m=g.getVerticesInWorldCoords();var p=[];var q=g.faceNormals;var e=o.length;var c=m.length;var n;var l;var f;var d;var h;for(n=0;n<e;n++){f=o[n];for(l=0;l<c;l++){p[l]=a.dot(q[l],a.VmV(f,m[l]))}if(p.some(function(i){return i>=0})){continue}h=a.minIndex(p);for(l=0;l<c;l++){d=m[l];if(s.linesIntersect(f,k.center,d,m[(l+1)%m.length])){h=l}}d=a.VmV(f,a.SxV(p[h],q[h]));r.push(new b(k,f,g,d,q[h]))}return r}}});