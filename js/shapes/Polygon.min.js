Polygon.prototype=new Shape;
function Polygon(n,p){Shape.call(this,n,new Color("White"),new Border("black",1),p);this.vertices=[];this.min=[];this.max=[];this.rotate=function(d,b){void 0==b?b=this.center:this.center=MV.rotate(this.center,d,b);for(var e=this.vertices.length,a=0;a<e;a++)this.vertices[a]=MV.rotate(this.vertices[a],d,b)};this.updateCenter=function(){for(var d=[0,0],b=0,e=this.vertices.length,a,c,f,g=0;g<e;g++)a=g+1==e?0:g+1,f=this.vertices[g],a=this.vertices[a],c=f[0]*a[1]-a[0]*f[1],d[0]+=(f[0]+a[0])*c,d[1]+=(f[1]+
a[1])*c,b+=c;this.area=b*=.5;b=1/(6*b);d[0]*=b;d[1]*=b;this.center=d};this.moi2=function(d){var b=0,e=0,a,c,f,g=this.vertices.length,h;for(h=0;h<g;h++)a=h+1==g?0:h+1,c=this.vertices[h],a=this.vertices[a],f=MV.norm(MV.VxV(c,a)),b+=f*MV.dot(a,a)+MV.dot(a,c)+MV.dot(c,c),e+=f;return d/6*(b/e)};this.moi=function(d){var b=this.center,e=0,a,c=this.vertices.length,f,g,h,k,m,l;for(a=0;a<c;a++)f=a+1==c?0:a+1,g=this.vertices[a],h=this.vertices[f],f=MV.distance(g,h),k=MV.distance(h,b),m=MV.distance(g,b),l=k/
m*2,k=k<m?Math.sqrt(Math.pow(k,2)-Math.pow(l,2)):Math.sqrt(Math.pow(m,2)-Math.pow(l,2)),k=(Math.pow(l,3)*f-Math.pow(f,2)*l*k+f*l*Math.pow(k,2)+f*Math.pow(l,3))/36,g=[(g[0]+h[0]+b[0])/3,(g[1]+h[1]+b[1])/3],f=f*l*d/this.area,e+=k+f*Math.pow(MV.distance(g,b),2);return e};this.updateRelative=function(){this.vertices=this.vertices.reverse();var d=this.center[0],b=this.center[1],e,a=this.vertices.length,c;for(e=0;e<a;e++)c=this.vertices[e],c[0]=-1*(d-c[0]),c[1]=-1*(b-c[1]);this.updateMinAndMax()};this.updateMinAndMax=
function(){var d=[this.vertices[0][0],this.vertices[0][1]],b=[this.vertices[0][0],this.vertices[0][1]],e=this.vertices.length,a,c;for(a=1;a<e;a++)for(c=0;1>=c;c++)this.vertices[a][c]<d[c]?d[c]=this.vertices[a][c]:this.vertices[a][0]>b[c]&&(b[c]=this.vertices[a][c]);this.min=d;this.max=b};this.isClockWise=function(){var d=0,b,e=this.vertices.length,a,c;for(b=0;b<e;b++)a=b+1==e?0:b+1,c=this.vertices[b],a=this.vertices[a],d+=(a[0]-c[0])*(a[1]+c[1]);return 0>d};this.sumAngles=function(){var d=0,b,e=this.vertices.length,
a,c,f;for(b=0;b<e;b++)a=b+1==e?0:b+1,c=a+1==e?0:a+1,f=this.vertices[b],a=this.vertices[a],c=this.vertices[c],f=MV.VmV(a,f),a=MV.VmV(c,a),d+=MV.getDegree(f,a);return d};this.isConvex=function(){return 360<this.sumAngles()}};
